 FUNCTION lpm_counter (data[LPM_WIDTH-1..0], clock, clk_en, cnt_en, updown, cin, aclr, aset, aconst, aload, sclr, sset, sconst, sload)
   WITH (LPM_WIDTH, LPM_DIRECTION, LPM_MODULUS, LPM_AVALUE, LPM_SVALUE, CARRY_CNT_EN, LABWIDE_SCLR)
   RETURNS (q[LPM_WIDTH-1..0], cout, eq[15..0]);
SUBDESIGN CLK_SAMPLE_GENERATOR(



	clk_sys									:input;
	bit_f[31..0]							:input;
	clk_samp									:output;
)
VARIABLE

	samp_s_count								:lpm_counter WITH (LPM_WIDTH=13);
	samp_s_1buf									:dff;
	samp_s_2buf									:dff;
	ena_samp_s									:dff;
	ena_samp										:node;
BEGIN
---------------------------------clk_samp----------
	samp_s_2buf									=samp_s_1buf;
	samp_s_count.clock						=clk_sys;
	samp_s_1buf.clk							=clk_sys;
	samp_s_2buf.clk							=clk_sys;
	ena_samp_s.clk								=clk_sys;
		
	CASE bit_f[27..17] IS
		WHEN B"1xxxxxxxxxx" =>													--1.25MHz
			samp_s_1buf							=samp_s_count.q[0];				--40
		WHEN B"01xxxxxxxxx" =>													--625KHz				
			samp_s_1buf							=samp_s_count.q[1];
		WHEN B"001xxxxxxxx" =>													--312.5KHz
			samp_s_1buf							=samp_s_count.q[2];
		WHEN B"0001xxxxxxx" =>													--156.25KHz
			samp_s_1buf							=samp_s_count.q[3];
		WHEN B"00001xxxxxx" =>													--78.125KHz
			samp_s_1buf							=samp_s_count.q[4];
		WHEN B"000001xxxxx" =>													--39KHz
			samp_s_1buf							=samp_s_count.q[5];				--2.2k
		WHEN B"0000001xxxx" =>													--19.6khz
			samp_s_1buf							=samp_s_count.q[6];
		WHEN B"00000001xxx" =>													--9.8KHz
			samp_s_1buf							=samp_s_count.q[7];
		WHEN B"000000001xx" =>													--5KHz
			samp_s_1buf							=samp_s_count.q[8];
		WHEN B"0000000001x" =>													--2.5KHz
			samp_s_1buf							=samp_s_count.q[9];
		WHEN B"00000000001" =>													--1.25KHz
			samp_s_1buf							=samp_s_count.q[10];
		WHEN B"00000000000" =>													--0.625KHz
			samp_s_1buf							=samp_s_count.q[11];
	END CASE;
	
	if bit_f[31..28]==B"0000" then 
		ena_samp_s								=samp_s_1buf and !samp_s_2buf;
	else 
		ena_samp_s								=VCC;
	end if;
clk_samp=ena_samp_s;--samp_s_2buf;
---------------clk_samp end----------
END ;
